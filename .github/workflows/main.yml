name: Main

on:
  workflow_dispatch:
#  push:
#    paths-ignore:
#      - '.gitignore'
#      - '*.md'

jobs:
  lint:
    name: üßπ Lint / üìú C++
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.9.0
        with:
          clang-format-version: '15'
          exclude-regex: 'subprojects'

  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'Release']
        config:
          - { name: 'üçè macOS Clang', os: macos-latest }
          - { name: 'üêß Linux GCC', os: ubuntu-latest }
          - { name: 'ü™ü Windows MSVC', os: windows-latest }

    name: üõ† Build / ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python Dependencies
        run: pip install meson ninja
      
      - name: Install Dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: sudo apt-get install uuid-dev

      - name: Setup MSVC (Windows)
        if: matrix.config.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: '10G'
          key: ${{ matrix.config.os }}-${{ matrix.build_type }}

      - name: Configure (Debug)
        if: matrix.build_type == 'Debug'
        run: meson setup builddir
      
      - name: Configure (Release)
        if: matrix.build_type == 'Release'
        run: meson setup builddir -Dbuildtype=release
      
      - name: Compile
        run: meson compile -C builddir

      # - name: Upload artifact (Debug)
      #   if: matrix.build_type == 'Debug'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ github.event.repository.name }}-Debug
      #     path: |
      #       ${{ github.workspace }}/install-${{ matrix.build_type }}/*

      # - name: Upload artifact (Release)
      #   if: matrix.build_type == 'Release'
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: ${{ github.event.repository.name }}-Release
      #     path: |
      #       ${{ github.workspace }}/install-${{ matrix.build_type }}/*
