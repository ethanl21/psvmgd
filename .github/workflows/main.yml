name: Main

on:
  workflow_dispatch:
#  push:
#    paths-ignore:
#      - '.gitignore'
#      - '*.md'

jobs:
  lint:
    name: ðŸ§¹ Lint / ðŸ“œ C++
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run clang-format style check
        uses: jidicula/clang-format-action@v4.9.0
        with:
          clang-format-version: '15'
          exclude-regex: 'subprojects'

  build:
    strategy:
      fail-fast: false
      matrix:
        build_type: ['Debug', 'Release']
        config:
          - { name: 'macOS-Clang', os: macos-latest }
          - { name: 'linux-GCC', os: ubuntu-latest }
          - { name: 'windows-MinGW', os: ubuntu-latest }

    name: ðŸ›  Build / ${{ matrix.config.name }} (${{ matrix.build_type }})
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Node
        uses: actions/setup-node@v4
      
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      
      - name: Install Python Dependencies
        run: pip install meson ninja
      
      - name: Install Dependencies (Ubuntu)
        if: matrix.config.os == 'ubuntu-latest'
        run: sudo apt-get install uuid-dev wine64

      - name: Setup MinGW
        if: matrix.config.name == 'windows-MinGW'
        uses: egor-tensin/setup-mingw@v2
        with:
          platform: x64

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: '10G'
          key: ${{ matrix.config.name }}-${{ matrix.build_type }}

      - name: Configure (MinGW Debug)
        if: matrix.build_type == 'Debug' && matrix.config.name == 'windows-MinGW'
        run: meson setup --cross-file cross/x86_64-w64-mingw32.txt builddir
        env:
          CCACHE_PREFIX: mingw32-
      
      - name: Configure (MinGW Release)
        if: matrix.build_type == 'Release' && matrix.config.name == 'windows-MinGW'
        run: meson setup --cross-file cross/x86_64-w64-mingw32.txt builddir -Dbuildtype=release
        env:
          CCACHE_PREFIX: mingw32-
      
      - name: Configure (Debug)
        if: matrix.build_type == 'Debug' && matrix.config.name != 'windows-MinGW'
        run: meson setup builddir
      
      - name: Configure (Release)
        if: matrix.build_type == 'Release' && matrix.config.name != 'windows-MinGW'
        run: meson setup builddir -Dbuildtype=release
      
      - name: Compile
        run: meson compile -C builddir

      - name: Upload artifact (Debug)
        if: matrix.build_type == 'Debug'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-Debug
          path: |
            ${{ github.workspace }}/install-${{ matrix.build_type }}/*

      - name: Upload artifact (Release)
        if: matrix.build_type == 'Release'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-Release
          path: |
            ${{ github.workspace }}/install-${{ matrix.build_type }}/*
